package chatroom.client.ui;

import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;

import chatroom.client.util.User;

import org.eclipse.swt.widgets.List;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import org.eclipse.swt.SWT;

/**
 * Auto generated by eclipse's plugin <br/>
 * This will act as an UI list the online users.
 * @author giglf
 *
 */
public class ChatRoomUI {

	protected Shell shell;
	private Text inputArea;
	private Text textDisplay;

	/**
	 * Launch the application.
	 * @param args
	 */
	public ChatRoomUI(){
		
	}

	public static void main(String[] args) {
		ChatRoomUI oListUI = new ChatRoomUI();
		oListUI.open();
	}
	/**
	 * Open the window.
	 */
	public void open() {
		Display display = Display.getDefault();
		createContents();
		shell.open();
		shell.layout();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

	/**
	 * Create contents of the window.
	 * @wbp.parser.entryPoint
	 */
	protected void createContents() {
		shell = new Shell(SWT.CLOSE | SWT.MIN);
		shell.setSize(600, 450);
		shell.setText("233ChatRoom");
		
		List list = new List(shell, SWT.BORDER|SWT.V_SCROLL);
		list.setBounds(446, 10, 138, 401);		
		
		inputArea = new Text(shell, SWT.BORDER);
		inputArea.setBounds(10, 341, 430, 70);
		
		textDisplay = new Text(shell, SWT.BORDER|SWT.V_SCROLL|SWT.MULTI|SWT.WRAP);
		textDisplay.setEditable(false);
		textDisplay.setBounds(10, 10, 430, 325);
		textDisplay.append("		Welcome to 233ChatRoom   --developed by giglf\n");
		
		
		/*inputArea.addKeyListener(new KeyListener() {
			@Override
			public void keyPressed(KeyEvent arg0) {
				if (arg0.keyCode == SWT.CR) {
					
					inputArea.setText("");
				}
			}
			@Override
			public void keyReleased(KeyEvent arg0) {
				
			}
		});*/
	}
	
	public void clientEnter() {
		//waiting to implement
	}
	
	public void clientExit() {
		//waiting to implement
	}
	
	//show message in chat window.
	public void showMessage(User user, String message){
		textDisplay.append(user.getUsername() + " (" + date2String(LocalDateTime.now()) + "): " + message);
	}
	
	private static String date2String(LocalDateTime localDateTime){
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("hh:mm:ss");
		return localDateTime.format(formatter);
	}
}
